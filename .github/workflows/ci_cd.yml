# name: CI/CD with Vercel

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 14

#       - name: Install Dependencies
#         run: npm install

#       - name: Build
#         run: npm run build

#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy to Vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           vercelToken: 1vtMzDfCmcAfofwzdN6g9v0g
#           # vercelToken: ${{ secrets.VERCEL_TOKEN }}

#           name: Deployment Pipeline


# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps: 
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - uses: actions/setup-node@v2
#         with:
#           node-version: '18'
#       - name: Install dependencies
#         run: npm ci
#       #- name: Lint
#       #  run: npm run eslint
#       - name: Build
#         run: npm run build



# name: CI/CD with Vercel

# on:
#   push:
#     branches: [main]
#   pull_request:     
#     branches: [main]
#     types: [opened, synchronize]


# jobs:
#     deploy:
#     runs-on: ubuntu-latest
#     steps: 
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - uses: actions/setup-node@v2
#         with:
#           node-version: '18'
#       - name: Install dependencies
#         run: npm ci
#       - name: Build
#         run: npm run build
#       - name: Deploy to Vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           vercelToken: 1vtMzDfCmcAfofwzdN6g9v0g
#           name: Maquinaria Pro
#           rollbackonhealthcheckfailed: true




  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to Vercel
  #       uses: amondnet/vercel-action@v20
  #       with:
  #         vercelToken: 1vtMzDfCmcAfofwzdN6g9v0g
  #         # vercelToken: ${{ secrets.VERCEL_TOKEN }}

  #         name: 

# name: CI/CD con Vercel

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]
#     types: [opened, synchronize]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout del Repositorio
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: Configurar Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '16' 

#       - name: Instalar Dependencias
#         run: npm ci

#       - name: Compilar
#         run: npm run build

#       - name: Implementar en Vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: 1vtMzDfCmcAfofwzdN6g9v0g
#           github-deployment: true

#       - name: Verificación de REPLY
#         run: |
#           REPLY=""
#           read -n 1 -p "Set up and deploy “~/work/proyectoFinal/proyectoFinal”? [Y/n] " < /dev/tty
#           if [[ "${REPLY}" != "y" ]]; then
#             echo "El valor de la variable 'REPLY' no es 'y'."
#             exit 1
#           fi
      
#       - name: Notificar en caso de Fallo
#         if: failure()
#         run: echo "La implementación falló. Verifica los registros del flujo de trabajo para más detalles."

# name: Deploy to Vercel

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]
#     types: [opened, synchronize]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Install dependencies
#         run: npm ci
#       - name: Build
#         run: npm run build
#       - name: Deploy to Vercel
#         uses: vercel/vercel@v3
#         with:
#           token: 1vtMzDfCmcAfofwzdN6g9v0g
#         env:
#           NODE_ENV: production
name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código fuente
        uses: actions/checkout@v2

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIAY3PLHSUJCEWYHAXB
          aws-secret-access-key: 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
          aws-region: eu-central-1

      - name: Instalar dependencias
        run: npm ci

      - name: Construir la aplicación en producción
        run: npm run build --verbose

      - name: Ver contenido del directorio de construcción
        run: ls

      - name: Desplegar en S3
        run: |
          aws s3 cp build s3://maquinaria-pro-g3 --recursive --acl public-r
